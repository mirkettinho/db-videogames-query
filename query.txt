QUERY SELECT
1. Selezionare tutte le software house americane (3)
SELECT *
FROM software_houses
WHERE country LIKE "United States";

2. Selezionare tutti i giocatori della cittÃƒ  di 'Rogahnland' (2)
SELECT *
FROM  players 
WHERE  city LIKE  "Rogahnland";

3. Selezionare tutti i giocatori il cui nome finisce per "a" (220)
SELECT *
FROM  players 
WHERE  name LIKE  "%a";

4. Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)
SELECT *
FROM  reviews 
WHERE  player_id = 800;

5. Contare quanti tornei ci sono stati nell'anno 2015 (9)
SELECT *
FROM  tournaments t  
WHERE  year LIKE "2015";

6. Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)
SELECT *
FROM  awards 
WHERE  description LIKE "%facere%";

7. Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)
SELECT DISTINCT cv.videogame_id 
FROM  category_videogame cv  
WHERE  category_id LIKE "2"
OR  category_id LIKE "6";

8. Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)
SELECT *
FROM reviews r 
WHERE rating >= 2
AND rating <= 4

9. Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)
SELECT *
FROM videogames 
WHERE YEAR(release_date) = 2020;

10. Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da 5 stelle, mostrandoli una sola volta (443)
SELECT DISTINCT r.videogame_id
FROM reviews r 
WHERE r.rating = 5;

11. Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)
SELECT count(r.id) AS review_number, avg(r.rating) AS avg_rating
FROM reviews r 
WHERE r.videogame_id = 412;

12. Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)
SELECT count(v.software_house_id) 
FROM videogames v  
WHERE v.software_house_id  = 1
AND YEAR(release_date) = 2018;



QUERY GROUP BY
1. Contare quante software house ci sono per ogni paese (3)
SELECT sh.country, count(sh.id) AS count_software_houses 
FROM software_houses sh  
GROUP BY sh.country

2. Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)
SELECT r.videogame_id, count(r.id) reviews
FROM reviews r 
GROUP BY r.videogame_id; 

3. Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)
SELECT plv.pegi_label_id , count(plv.videogame_id)
FROM pegi_label_videogame plv 
GROUP BY plv.pegi_label_id 

4. Mostrare il numero di videogiochi rilasciati ogni anno (11)
SELECT YEAR(v.release_date) AS anno, count(v.id) AS numero_videogiochi
FROM videogames v 
GROUP BY anno;

5. Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)
SELECT dv.device_id, count(dv.videogame_id) AS videogiochi
FROM device_videogame dv 
GROUP BY dv.device_id;

6. Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)
SELECT videogame_id, avg(r.rating) AS media
FROM reviews r 
GROUP BY videogame_id 
ORDER BY media;



QUERY JOIN
1. Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)
SELECT p.*, r.message AS recensione
FROM players p 
JOIN reviews r 
ON r.player_id = p.id
GROUP BY p.id

2. Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)
SELECT DISTINCT v.*
FROM videogames v 
JOIN tournament_videogame tv 
ON tv.videogame_id = v.id 
JOIN tournaments t 
ON t.id = tv.tournament_id 
WHERE t.`year` = 2016

3. Mostrare le categorie di ogni videogioco (1718)
SELECT DISTINCT v.id videogames_id, c.*
FROM videogames v 
JOIN category_videogame cv 
ON cv.videogame_id = v.id 
JOIN categories c 
ON c.id = cv.category_id
ORDER BY v.id;

4. Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)
SELECT DISTINCT sh.*
FROM software_houses sh 
JOIN videogames v 
ON v.software_house_id = sh.id 
WHERE YEAR(v.release_date) >= 2020

5. Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)
SELECT sh.id AS software_houses, a.id AS id_premio  , a.name AS premio_name
FROM software_houses sh 
JOIN videogames v 
ON v.software_house_id = sh.id 
JOIN award_videogame av 
ON av.videogame_id = v.id 
JOIN awards a 
ON a.id = av.award_id
ORDER BY software_houses;

6. Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)
SELECT v.id AS id_videogames, v.name AS  name, c.id AS id_category, c.name AS category_name, pl.id AS id_pegi, pl.name AS PEGI_name
FROM videogames v 
JOIN category_videogame cv 
ON cv.videogame_id = v.id 
JOIN categories c 
ON c.id = cv.category_id 
JOIN pegi_label_videogame plv 
ON plv.videogame_id = v.id 
JOIN pegi_labels pl 
ON pl.id = plv.pegi_label_id 
JOIN reviews r 
ON r.videogame_id = v.id 
WHERE rating >= 4
GROUP BY v.id, c.id, pl.id;

7. Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)
SELECT DISTINCT  v.id AS id_videogmaes, v.name AS name_videogames
FROM videogames v 
JOIN tournament_videogame tv 
ON tv.videogame_id  = v.id 
JOIN tournaments t 
ON t.id = tv.tournament_id 
JOIN player_tournament pt 
ON pt.tournament_id = t.id 
JOIN players p 
ON p.id = pt.player_id 
WHERE p.name LIKE "S%";


